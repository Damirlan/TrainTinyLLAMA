import torch
from transformers import LlamaTokenizer, LlamaForCausalLM

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å —Å Hugging Face
MODEL_NAME = "TinyLlama/TinyLlama-1.1B-Chat-v1.0"

print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å –∏ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä...")
tokenizer = LlamaTokenizer.from_pretrained(MODEL_NAME)
model = LlamaForCausalLM.from_pretrained(
    MODEL_NAME,
    torch_dtype=torch.float16 if torch.cuda.is_available() else torch.float32
).to("cuda" if torch.cuda.is_available() else "cpu")
model.eval()

# –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
examples = [
    {
        "rating": 5,
        "product_name": "–∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞",
        "review_text": "–û—á–µ–Ω—å —Ç—ë–ø–ª–∞—è –∏ —É–¥–æ–±–Ω–∞—è. –ù–æ—à—É —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!"
    },
    {
        "rating": 2,
        "product_name": "–±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
        "review_text": "–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é –æ–¥–∏–Ω –Ω–∞—É—à–Ω–∏–∫ –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å."
    }
]

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
def generate_reply(example):
    prompt = (
        f"–¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –º–∞–≥–∞–∑–∏–Ω–∞.\n"
        f"–†–µ–π—Ç–∏–Ω–≥: {example['rating']}\n"
        f"–¢–æ–≤–∞—Ä: {example['product_name']}\n"
        f"–û—Ç–∑—ã–≤: {example['review_text']}\n"
        f"–û—Ç–≤–µ—Ç:"
    )
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)

    with torch.no_grad():
        output = model.generate(
            **inputs,
            max_new_tokens=80,
            do_sample=True,
            temperature=0.8,
            top_p=0.9,
            eos_token_id=tokenizer.eos_token_id
        )

    generated = tokenizer.decode(output[0], skip_special_tokens=True)
    response = generated[len(prompt):].strip().split("–†–µ–π—Ç–∏–Ω–≥:")[0].strip()
    return response

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
print("\nüìä –û—Ç–≤–µ—Ç—ã –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏:\n" + "-"*50)
for i, ex in enumerate(examples, 1):
    reply = generate_reply(ex)
    print(f"[–ü—Ä–∏–º–µ—Ä {i}]")
    print(f"üõí –¢–æ–≤–∞—Ä: {ex['product_name']}")
    print(f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {ex['rating']}")
    print(f"üìù –û—Ç–∑—ã–≤: {ex['review_text']}")
    print(f"ü§ñ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: {reply}\n" + "-"*50)

